in this video I'll be sharing the singlebest machine learning project that willtake you from beginner to Pro and giveyou that unfair Advantage I mean thisproject got me an interview at Googledeepmind and taught me almost all thebasic skills it takes to be a machinelearning Pro you'll see what I mean sowhat is this magical projectreimplementing a paper and recreatingits results is it easy no no it's notbut if you follow the steps I break downin this video it's really not that scaryI promise let's get started what is stepone of reimplementing a paper andrecreating its results you guessed it ofcourse we first need to read the paper Ihave a whole separate video on how toread a paper but here I want to show youmy method of reading a paper with aspecific purpose of reimplementing itwhat I need for this processare text markers in three differentcolors well I personally use my iPads toread and highlight papers but you getthe point when reading the paper thereare three important parts I'm lookingout for and have a separate color forcolor number one is for Generalunderstanding we of course want tohighlight the parts that we think aregenuinely important for theunderstanding of the paper this isnothing all too new now color number twois a bit more specific to our task ofreimplementing the paper we here want toactively highlight the parts relevantfor the implementation this includesthings like the used loss functionarchitecture details and Hyperparameters when highlighting these partsyou can already start envisioning howyou would starts to implement thearchitecture and which otherrepositories you already know that havesimilar implementations that you can usefor your own new implementation or youwrite down a list of common modules youneed to look up existing implementationsfor the idea here is you don't have toreinvent the wheel there are a lot ofpublic implementations of Transformerblocks for example so you don'tnecessarily need to reimplement thatfrom scratch without any help you ofcourse could with the purpose oflearning but in my opinion depending onthe paper you choose you will alreadyhave enough work to do okay now to thefinal color color number three is forsomething very specific data sets sincewe want to not only reimplement thepaper but also recreate the results toactually verify whether we implementedthe paper successfully we need to trainon the same data sets and evaluate onthe same ones highlighting those shouldnot be too difficult finally it mightalso be important to perhaps look fordetails about the compute that theauthors used if the authors trained anlln on 50 A1 100s it might be difficultfor you to reproduce actual results butyou might still implement the paper andtrain a model of smaller scale but thenyou just can't really compare the finalperformance okay now that you have readour paper and found all the relevantinformation it's time to get to to workthe first task I recommend you tackleare the data sets this means you need tofind the data sets on the internet andfigure out how to download them in myexperience this can be trickier than youmight think but not too difficult afterhaving downloaded all data sets or evenjust one you can get to the step numbertwo of handling the data setimplementing the data set and dataloader classes if you have worked withpy do before you will know what thoseare this should again not be toodifficult and f a data loader will beused to provide data in a pre-processedformat so that you can very consistentlyget a batch of data and just focus onthe training logic when implementing thedata set and data loader classes Igenerally also recommend to use jupternotebooks because those make it veryeasy to save certain variables like thepath to the data set and visualizeeverything you need oh and one finalthing is that if working on areinforcement learning paper theequivalence to implementing data setclassis setting up the gym environment okaytime for the model architecture we'regetting serious now this might be themost scary part or not it again reallydepends on the paper perhaps your paperfocuses more on a new training techniquerather than new architecture but let'sfinally get to it since you havehighlighted the novel elements of thearchitecture and found existingimplementations of modules you mightneed I would recommend to just startcoding don't think too much about makingit right the first first time startwriting your torch. nn. module class andinitialize all layers you think youmight need if there are larger morecomplex modules you can directly startto write a function for those forexample a q forer block perhaps part ofyour model is on llm in that case youwill most likely just want to import itfrom hugging face just dump every blockand module you think you need into theinit function and then gets to theforward pass here once again don'toverthink it you might have a modelarchitecture diagram in the paper thatdescribes the layout of the modules inother words the flow of the data withoutthinking too hard whether the outputshapes make sense or whether you haveeverything in the right order justImplement what you think makes sensethink of it like this you want to builda Lego castle so you first spill out allthe Legos you then somewhat cluster theright pieces together for the towerswalls doors and so on you haveeverything in front of you you now justneed to make every piece fits togetherwith the others now that you have yourfirst model architecture draft you canget yourself your data loader get abatch and pass it into the model it willnot work the model will be broken theLego doors don't fit into the walls thatis what we 100% expected we now get ourdebugger I recommend using vs code andstep through the code tackling one bugafter the other your initializationdoesn't work because you have somedependency issues fix that your datapasses into the modelamazing but there is an error when beingfed into the first layer because thelayer was initialized with the wronginput shape fix that the output of thefirst layer does not fit into thefollowing layer because of another shapeissue fix that again the door does notfit into the wall but you see why thedoor is one block too wide so you removeone column of blocks now it fits are theoutput shapes of the significant modulesthe shapes you expected the shapes thatwere described in the paper thisdevelopment through debugging fixing oneproblem after the other is what itreally means to implement somethingrepeat this process until you have noerrors your IDE throws at you the bugsup until now are arguably the easy onesin the next step when actually trainingthe model we might encounter bugs thatthe ID can't find the code runs smoothlybut the model does not learn anythingbut before we get to that point let'simplement the final building blocks weneed there are two ways you can approachtraining depending on your your paper ofchoice either you need to implement theloss metrics and training loop on yourown which shouldn't be too hard or youuse existing libraries for theoptimization process like the huggingface trailer you there only need toprovide the model data set and trainingarguments I personally would recommendif suitable in your case to use such anexisting implementation and read throughthe documentation or tutorials tounderstand how to properly use them atthis point we again get out of the codedebugger step through one trainingiteration debug the hell out of thetraining steps and remove all basicerrors that the IDE throws at you nowthe IDE can't help us anymore now weneed to start training runs and look atlogs of loss metrics and specificexamples if the loss is behaving weirdlywe might still have a bug in the codethat is not a normal error that breaksthe code but that breaks the learningprocess that is why the arguably mostimportant part of the training Loop ortraining implementation is logging themetrics seeing the loss of your modelprogress with each Epoch and actuallyseeing examples of input and output ofyour model changing overt trining willbe the only way for you to figure out ifyour model is learning as you expectedor not I he recommends to use weightsand biases I've used it for all of myprojects and really love it I'mcertainly not sponsored anything butwith weights and biases you can doeverything you need log the loss andmetrics as well as samples to actuallysee input and output of your model forexample for an image captioning modelyou can log the input image andpredicted caption to see the progressyou can then use exactly these graphsand visualizations to discuss problemswith teammates or friends as mentionedthe great thing is that you know howtraining or final results should roughlylook like since you're trying to achievethe same ones as in the paper you arereimplementing this means the papergives you not only rough instructions onhow to build your Lego castle but alsoshows you how it should look like in theend so now the final steps are againjust debugging comparing to the paperand more debugging of course these exactsteps might not all make sense for yourspecific paper you want to reimplementbut I hope the majority does and theoverall approach of breaking down thecomplex task of reimplementing a paperinto smaller and more manageable stepshelps you this is a challenging projectperhaps more perhaps less depending onthe exact paper you have selected buteither way this project will teach youso much be an impressive project to showyour friends and employers anddefinitely give you an unfair advantageover those who have not worked on such aproject and after spending so much timeworking on this project you might wantto watch this video next where I share atip on how to really give your work thatfinal polish and make you stand out onyour mlapplication bye-bye